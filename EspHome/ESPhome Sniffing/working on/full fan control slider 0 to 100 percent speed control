esphome:
  name: hrv_keypad
  friendly_name: HRV Fan Control

esp8266:
  board: d1_mini

wifi:
  ssid: "Reaver"
  password: "FigjamDilligaf74"
  manual_ip:
    static_ip: 192.168.1.100
    gateway: 192.168.1.1
    subnet: 255.255.255.0
  power_save_mode: none
  fast_connect: true

logger:
  baud_rate: 115200
  level: DEBUG
web_server:
  port: 80
api:
  encryption:
    key: "hZXm4NPWC33G3NS3kzqXkXR5mHUn/PUIUY+8RTcm4Ps="

ota:
  platform: esphome
    
  password: "283355a588a90db0f31782330ad9f820"

uart:
  id: bus
  tx_pin: D1
  rx_pin: D2
  baud_rate: 1200
  data_bits: 8
  parity: NONE
  stop_bits: 1

globals:
  - id: target_percent
    type: int
    initial_value: '0'
  - id: hold_on
    type: bool
    initial_value: 'false'
  - id: last_sent_ms
    type: uint32_t
    initial_value: '0'
  - id: keepalive_period_ms
    type: int
    initial_value: '900'

script:
  - id: send_fan
    mode: queued
    then:
      - lambda: |-
          int p = id(target_percent);
          if (p < 0) p = 0;
          if (p > 100) p = 100;
          uint8_t code = (p <= 30) ? 0x4E : (p <= 75 ? 0x4F : 0x50);
          std::vector<uint8_t> body{0x31,0x01,code,(uint8_t)p,0x1E,0x84,0xF0};
          std::vector<uint8_t> f{0x7E};
          f.insert(f.end(), body.begin(), body.end());
          int sum = 0;
          for (size_t i=1; i<f.size(); ++i) sum -= f[i];
          f.push_back((uint8_t)sum); f.push_back(0x7E);
          auto u = id(bus);
          for (auto v : f) u->write_byte(v);
          id(last_sent_ms) = millis();

interval:
  - interval: 1s
    then:
      - lambda: |-
          if (id(hold_on) && millis() - id(last_sent_ms) > (uint32_t)id(keepalive_period_ms)) {
            id(send_fan).execute();
          }

number:
  - platform: template
    name: "HRV Fan %"
    min_value: 0
    max_value: 100
    step: 1
    optimistic: true
    on_value:
      - lambda: |-
          id(target_percent) = (int)x;
          id(hold_on) = true;
          id(send_fan).execute();

button:
  - platform: template
    name: "Fan 0%"
    on_press:
      - lambda: |-
          id(target_percent) = 0;
          id(hold_on) = true;
          id(send_fan).execute();

  - platform: template
    name: "Fan 50%"
    on_press:
      - lambda: |-
          id(target_percent) = 50;
          id(hold_on) = true;
          id(send_fan).execute();

  - platform: template
    name: "Fan 100%"
    on_press:
      - lambda: |-
          id(target_percent) = 100;
          id(hold_on) = true;
          id(send_fan).execute();

  - platform: template
    name: "Keepalive STOP"
    on_press:
      - lambda: |-
          id(hold_on) = false;
